
/* Setting the fonts for the project and the overarching contatiner */
html, body {
    width: 1000px;
    margin: 0 auto;
    overflow-x: hidden;
    font-family: Arial, Helvetica, sans-serif;
  }
  
  /* Ensuring that the logo is a specified height */
  #company-logo{
    width: 300px;
  }
  
  /* This makes the list style none to ensure there are no bullets/underlines */
  nav ul {
    list-style-type: none;
    margin-right: 100px;
  }
  
  /* This styles the navigation bar (a container that includes the top logo image). It aligns items correctly and draws the line in spec*/
  nav {
    display: flex;
    width: 1000px;
    justify-content: space-between;
    align-items: center;
  
    /* This answer gave me clarity on a good way to draw that line without it being absolute https://stackoverflow.com/questions/8804417/css-border-where-only-half-of-a-border-is-visible */
    border-bottom: 2px solid;
    border-image: linear-gradient(to left, #000 65%, transparent 0%) 80% 1;
  }
  
  /* This aligns the nav elements to the right */
  nav li {
    float: right;
  }
  
  /* This gives more space between the two nav elements */
  #products-nav-element{
    margin-right: 40px;
  }
  
  /* This shows the selection for square button */
  .square-button::selection{
      background-color: lightgray;
      border-color: darkgray;
  }
  
  /* This styles the links in the navbar */
  nav a {
    display: block;
    color: black;
    text-decoration: none;
    text-transform: uppercase;
  }
  
  /* This adds a yellow background to the nav links */
  nav li a:hover{
    background-color: yellow;
    font-weight: bold;
  }
  
  /* This styles the "Our hand-made cinnamon rolls text  */
  .info-header{
    font-size: 20px;
    text-align: center;
    margin-right: 40px;
    font-style: normal;
  }
  
  /* This sets up the grid for the products */
  .main-grid{
    display: grid;
    grid-template-rows: 1fr 1fr;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
    width: 1000px;
    margin: 0 auto;
    margin-top: 50px;
  }
  
  /* This styles the product images */
  .product-selector img{
    max-width: 220px;
    border: solid;
  }
  
  /* This sets up a container that holds all of the elements */
  .container {
    width: 100%;
    max-width: 1000px; 
    margin: 0 auto;
    padding: 20px; 
  }
  
  /* This styles the glazing option elements via spacing*/
  .glazing-option-container{
    display: inline-flex;
    gap: 10px;
  }
  
  /* This styles the pack size container via spacing*/
  .pack-size-container{
    display: inline-flex;
    gap: 10px;
    margin-top: 20px;
  }
  
  /* This ensures that elements in the product selector are displaed vertically*/
  .product-selector div {
    display: block;
  }
  
  
  /* This radio button approach was found in this StackOverflow response! */
  /* I was going to use traditional buttons but this makes it easier with radio buttons to get the "on/off" functionality */
  /* https://stackoverflow.com/questions/24516958/styling-radio-buttons-into-a-square */
  input[type="radio"] {
    display: none;
  }
  
  /* This styles the pack size radio buttons to make them look like the spec*/
  .pack-size-button{
    display: inline-block;
    width: 30px;
    height: 30px;
    background-color: white;
    border: solid;
    color: black;
    font-size: 15px;
    text-align: center;
    line-height: 30px;
  }
  
  /* This styles the interaction with the pack size buttons See this for the inspiration for this approach: https://stackoverflow.com/questions/24516958/styling-radio-buttons-into-a-square */
  .product-selector input[type="radio"]:checked + .pack-size-button {
    background-color: lightgray;
  } 
  
  /* This styles the add to cart button*/
  .add-to-cart-button{
    font-size: 15px;
    font-weight: 600;
    padding: 5px;
    padding-inline: 20px;
    background-color: white;
    margin-left: 30px;
    cursor: pointer;
  }
  
  
  /* This styles the hover interaction for the cart button*/
  .add-to-cart-button:hover{
    background-color: yellow;
  }

  /* This sets up the cart container used for the cart popup and such */
  #cart-container {
    display: inline-block; 
}

.cart-popup {
    display: none; 
    position: absolute; 
    background-color: #ffffff;
    border: 1px solid gray;
    font-size: 12px;
    transition-delay: 3000ms;
    transition-property: display none;
    padding-inline: 20px;
}

  
  /* This styles the add to cart container label*/
  .cart-button-container label{
    font-size: 20px;
    font-weight: 600;
    background-color: white;
  }
  
  /* This styles the container for the cart button and label*/
  .cart-button-container{
    margin-top: 20px;
  }
  
  